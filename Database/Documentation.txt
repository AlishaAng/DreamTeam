Documentation for database
  

There is a many-to-many relationship between kinase and phosphosite; between kinase and inhibitor, and between kinase and subcellular location. Thus, a relationship was drawn between kinase and phosphosites as well as between kinase and inhibitor. No relationship table was drawn between subcellular location and kinase because the trade-off between the time saved from using a relationship table and hassle of creating it is not worth it. 


There is a one-to-many relationship between substrate and phosphosites as each phosphosites belong to a substrate. Therefore, a foreign key and a backref pointing towards the Substrate table from the PhosphositeMeta table is sufficient. 


The relationship between the KinaseGeneName and KinaseGeneMeta is a many-to-one relationship. Thus, a foreign key is enough.


For the relatively small scale of the project, SQLAlchemy is chosen with sqlite. This means the database created will be on local machine rather than on web-based server. This has multiple advantages over the use of other database languages like MySQL. One of it being that SQLAlchemy is  one of the object relational mapping tools that allows user to minimise the necessity for tedious and erroneous SQL statements. SQLAlchemy also allows the user to employ python in creating the database and query it. Web-based SQL also has a limit on how much data the user can store and importing the data to the web-based server is normally unencrypted.